import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings as wr

wr.filterwarnings('ignore')

# Load dataset
df = pd.read_csv("WineQT.csv")

# Dataset overview
df.shape
df.info()
df.describe()
df.columns.tolist()
df.isnull().sum()

# Checking duplicate values
df.nunique()

# Count the occurrences of each quality value
quality_counts = df['quality'].value_counts()

# Create a bar plot
plt.figure(figsize=(8, 6))
plt.bar(quality_counts.index, quality_counts, color='deeppink')
plt.title('Count Plot of Quality')
plt.xlabel('Quality')
plt.ylabel('Count')
plt.show()

# Distribution plots for numerical columns
sns.set_style("darkgrid")
numerical_columns = df.select_dtypes(include=["int64", "float64"]).columns

plt.figure(figsize=(14, len(numerical_columns) * 3))
for idx, feature in enumerate(numerical_columns, 1):
    plt.subplot(len(numerical_columns), 2, idx)
    sns.histplot(df[feature], kde=True)
    plt.title(f"{feature} | Skewness: {round(df[feature].skew(), 2)}")

plt.tight_layout()
plt.show()

# Swarm plot for quality and alcohol
plt.figure(figsize=(10, 8))
sns.swarmplot(x="quality", y="alcohol", data=df, palette='viridis')
plt.title('Swarm Plot for Quality and Alcohol')
plt.xlabel('Quality')
plt.ylabel('Alcohol')
plt.show()

# Pair plot
sns.set_palette("Pastel1")
sns.pairplot(df)
plt.suptitle('Pair Plot for DataFrame')
plt.show()

# Violin plot for alcohol across quality levels
df['quality'] = df['quality'].astype(str)
plt.figure(figsize=(10, 8))
sns.violinplot(
    x="quality",
    y="alcohol",
    data=df,
    palette={
        '3': 'lightcoral', '4': 'lightblue',
        '5': 'lightgreen', '6': 'gold',
        '7': 'lightskyblue', '8': 'plum'
    }
)
plt.title('Violin Plot for Quality and Alcohol')
plt.xlabel('Quality')
plt.ylabel('Alcohol')
plt.show()

# Boxplot for alcohol vs quality
sns.boxplot(x='quality', y='alcohol', data=df)

# Correlation heatmap
plt.figure(figsize=(15, 10))
sns.heatmap(df.corr(), annot=True, fmt='.2f', cmap='Pastel2', linewidths=2)
plt.title('Correlation Heatmap')
plt.show()
